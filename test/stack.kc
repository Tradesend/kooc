@import(stack)

@definition(system) {
  @implementation(stack) {
    @constructor(char *type, void *ptr) {
      @set(system@stack@_type)(this, type);
      @set(system@stack@_ptr)(this, ptr);
      @set(system@stack@_next)(this, NULL);
    };

    bool  push_back(char *type, void *ptr) {
      system@stack *tmp = this;
      while (tmp)
        tmp = @get(system@stack@_next)(this);
      @set(system@stack@_next)(tmp, @new(system@stack)(type, ptr));
      return true;
    };

    bool  pop_back() {
      system@stack *tmp = this;
      while (tmp && tmp->_next && tmp->_next->_next)
        tmp = tmp->_next;
      if (!tmp->_next)
        return false;
      tmp->_next = NULL;
      return true;
    };
  };
};